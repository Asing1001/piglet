---
// Import necessary components and utilities
import MainLayout from '@/layouts/MainLayout.astro';
import AvatarBlogLarge from '@components/ui/avatars/AvatarBlogLarge.astro';
import CardRelated from '@components/ui/cards/CardRelated.astro';
import Bookmark from '@components/ui/buttons/Bookmark.astro';
import SocialShare from '@components/ui/buttons/SocialShare.astro';
import PostFeedback from '@components/ui/feedback/PostFeedback.astro';
import { Image } from 'astro:assets';
import { capitalize, formatDate } from '@utils/utils';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import { SITE } from '@data/constants';
import { documentToHtmlString } from '@contentful/rich-text-html-renderer';
import { contentfulClient, type BlogPost, type TypeBlogPostFields } from '@/contentful/contentful';

export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries<BlogPost>({
    content_type: 'blogPost',
  });

  const pages = entries.items.map((item) => ({
    params: { slug: item.fields.slug },
    props: { post: item.fields },
  }));
  return pages;
}

interface Props {
  post: TypeBlogPostFields;
  recentBlogLocale?: string;
}

// getStaticPaths is used to pre-render all routes based on the blog posts
// Get the current post's data
const { post } = Astro.props;

const pageTitle: string = `${post.title} | ${SITE.title}`;
const options = {
  renderNode: {
    'embedded-asset-block': (node) => {
      const { file, title } = node.data.target.fields;
      const imageUrl = file.url;
      return `<img src="${imageUrl}" alt="${title}" />`;
    },
    // Optionally handle other nodes (e.g., paragraphs, headings)
  },
};
const content = documentToHtmlString(post.content, options);
---

<MainLayout title={pageTitle}>
  <section class="mx-auto max-w-3xl px-4 pb-12 pt-6 sm:px-6 lg:px-8 lg:pt-10">
    <div class="max-w-2xl">
      <!--Blog post title-->
      <h2 class="mb-3 text-2xl font-bold text-neutral-800 dark:text-neutral-200 md:text-3xl">
        {post.title}
      </h2>
      <!--Blog post contents-->
      <div class="mb-5 space-y-5 md:mb-8 md:space-y-8">
        <Image
          class="w-full rounded-xl object-cover"
          src={'https:' + post.cardImage?.fields.file?.url}
          alt=""
          inferSize={true}
          draggable={'false'}
          format={'avif'}
        />
        <div class="text-pretty text-lg text-neutral-700 dark:text-neutral-300" set:html={content} />
      </div>
      <div class="mx-auto grid max-w-screen-lg gap-y-5 sm:flex sm:items-center sm:justify-between sm:gap-y-0">
        <!--Blog post tags-->
        <!-- <div class="flex flex-wrap gap-x-2 gap-y-1 sm:flex-nowrap sm:items-center sm:gap-y-0">
          {
            post.tags?.map((tag: string, index) => (
              <span class="inline-flex items-center gap-x-1.5 rounded-lg bg-neutral-400/30 px-3 py-1.5 text-xs font-medium text-neutral-700 outline-none focus:outline-none focus-visible:outline-none focus-visible:ring dark:bg-neutral-700/60 dark:text-neutral-300">
                {capitalize(tag)}
              </span>
            ))
          }
        </div> -->
        <!--Bookmark and Share buttons-->
        <div class="flex items-center justify-end gap-x-1.5">
          <Bookmark />
          <div class="mx-3 block h-4 border-e border-neutral-400 dark:border-neutral-500"></div>
          <div class="inline-flex">
            <SocialShare pageTitle={post.title} />
          </div>
        </div>
      </div>
    </div>
  </section>
</MainLayout>
